export default function Header() {
    /**
     * #1. Routing
     * - URL 경로에 따라 컴포넌트를 렌더링 하는 기능. 즉, 사용자가 어떤 주소로 접속했는지에 따라 다른 화면을 보여주는 기능을 의미한다.
     * - 전통적인 웹 애플리케이션에서는 라우팅처리를 서버에서 수행한다. (JSP, Spring, MVC)
     * - 반면, React에서는 브라우저에서 URL만 변경한 뒤, 해당 URL에 맞는 컴포넌트만 부분적으로 다시 그리는 방식을 사용한다.
     * - React는 내부적으로 History API를 사용하여 실제 페이지 이동 없이 URL만 교체한 후, 그에 맞는 컴포넌트를 렌더링함. (전체 페이지 새로고침되지 않는다)
     * 
     * Server Side Rendering(SSR)
     * - 사용자가 특정 URL을 요청하면, 서버가 그 URL에 맞는 HTML을 직접 생성하여 전달.
     * - 페이지 이동시마다 서버로 새롭게 요청을 하고 새로운 HTML을 생성하여 반환(단, 캐싱 사용).
     * - HTML 중심의 서버 렌더링 방식.
     * - HTML을 꾸미는데 필요한 데이터를 서버가 관리하기 때문에 보안에 유리하다.
     * - 단점: 사용자 경험(UX)이 CSR보다 좋지 못하며, 서버에 부하가 증가.
     * - 장점: 봇이 SEO 점수를 높게 줘서 검색결과 우선순위가 올라간다.
     * 
     * Client Side Rendering(CSR)
     * - 최초 1번 index.html을 렌더링.
     * - 이후에는 컴포넌트를 url별로 다르게 렌더링하는 방식을 사용(페이지 전환 없이).
     * - 새로고침이 없기 때문에 좋은 UX를 제공한다.
     * - 단점: 보안상 취약하며, 낮은 SEO 점수를 받는다.
     * 
     * #2. react-router-dom
     * - React에서 라우팅 기능을 제공하는 라이브러리.
     * - 사용자가 주소창에 입력한 url에 따라 보여줄 컴포넌트를 설정할 수 있다.
     */
    // 모든 컴포넌트에서 사용할 공용 컴포넌트.
    return (
        <>
            <h1>Header</h1>
        </>
    )
}